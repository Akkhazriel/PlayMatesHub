import { Scenes } from 'telegraf';
import { getSteamProfile, getSteamGames } from '../utils/steamApi.js';
import { updateUserSteamId } from '../services/userService.js';
import db from '../db.js';
import { logToAdmin } from '../utils/logToAdmin.js';

const linkSteamScene = new Scenes.BaseScene('linkSteamScene');

linkSteamScene.enter(async (ctx) => {
  const telegramId = ctx.from.id.toString();

  try {
    const { rows } = await db.query('SELECT id, steam_id FROM profiles WHERE telegram_id = $1', [telegramId]);
    const profile = rows[0];

    if (!profile) {
      try {
        await ctx.reply('‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.');
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è', err);
      }
      return ctx.scene.enter('registrationScene');
    }

    if (profile.steam_id) {
      try {
        await ctx.reply('‚úÖ –£ –≤–∞—Å —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω Steam-–ø—Ä–æ—Ñ–∏–ª—å. –î–ª—è —Å–º–µ–Ω—ã –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è', err);
      }
      return ctx.scene.leave();
    }

    await ctx.reply('üîó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å Steam –∏–ª–∏ –≤–∞—à Steam ID.');
  } catch (err) {
    console.error('[linkSteamScene] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å—Ü–µ–Ω—É:', err);
    await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å—Ü–µ–Ω—É (linkSteamScene): ${err.message}`);
    try {
      await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è', err);
      await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (linkSteamScene, –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, enter): ${err.message}`);
    }
    return ctx.scene.leave();
  }
});


async function saveSteamGames(steamId) {
  try {
    const games = await getSteamGames(steamId);

    if (!games.length) {
      console.warn(`–ù–µ—Ç –∏–≥—Ä —É steam_id: ${steamId}`);
      return;
    }

    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
    await db.query('DELETE FROM steam_stats WHERE steam_id = $1', [steamId]);

    const inserts = [];
    const params = [];
    let index = 1;

    for (const game of games) {
      inserts.push(`($${index++}, $${index++}, $${index++}, $${index++})`);
      params.push(steamId, game.appid, game.name, Math.round((game.playtime_forever || 0) / 60 * 10) / 10);
    }

    await db.query(
      `INSERT INTO steam_stats (steam_id, appid, game_name, playtime_hours) VALUES ${inserts.join(',')}`,
      params
    );

    console.log(`–ò–≥—Ä—ã Steam —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${steamId}`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Steam –∏–≥—Ä –¥–ª—è ${steamId}:`, error.message);
    await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Steam –∏–≥—Ä (linkSteamScene, steamId: ${steamId}): ${error.message}`);
  }
}

linkSteamScene.on('text', async (ctx) => {
  const input = ctx.message.text.trim();

  try {
    const steamData = await getSteamProfile(input);

    if (!steamData) {
      try {
        await ctx.reply('‚ùó –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –∏–ª–∏ Steam ID.');
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è', err);
        await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (linkSteamScene, –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, on text): ${err.message}`);
      }
      return;
    }

    if (steamData.communityvisibilitystate !== 3) { // 3 = –ø—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
      try {
        await ctx.reply('üîí –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Ç. –û—Ç–∫—Ä–æ–π—Ç–µ –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Steam, —á—Ç–æ–±—ã –ø—Ä–∏–≤—è–∑–∞—Ç—å.');
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è', err);
        await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (linkSteamScene, —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω Steam, on text): ${err.message}`);
      }
      return;
    }

    const telegramId = ctx.from.id.toString();
    const newSteamId = steamData.steamid;

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { rows } = await db.query('SELECT id, steam_id FROM profiles WHERE telegram_id = $1', [telegramId]);
    const profile = rows[0];

    if (!profile) {
      try {
        await ctx.reply('‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.');
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è', err);
        await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (linkSteamScene, Steam –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º): ${err.message}`);
      }
      return ctx.scene.leave();
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–≤—è–∑–∞–Ω –ª–∏ —É–∂–µ Steam —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (profile.steam_id) {
      try {
        await ctx.reply('‚úÖ –£ –≤–∞—Å —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω Steam-–ø—Ä–æ—Ñ–∏–ª—å. –î–ª—è —Å–º–µ–Ω—ã –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è', err);
        await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (linkSteamScene, –ø–æ—Å–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏): ${err.message}`);
      }
      return ctx.scene.leave();
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ —ç—Ç–æ—Ç Steam –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const { rows: existingSteamUsers } = await db.query(
      'SELECT telegram_id FROM profiles WHERE steam_id = $1',
      [newSteamId]
    );

    if (existingSteamUsers.length > 0) {
      try {
        await ctx.reply('‚ùó –≠—Ç–æ—Ç Steam-–∞–∫–∫–∞—É–Ω—Ç —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.');
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è', err);
        await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (linkSteamScene, –≤–Ω—É—Ç—Ä–∏ –≥–ª–∞–≤–Ω–æ–≥–æ catch): ${err.message}`);
      }
      return ctx.scene.leave();
    }

    // 4. –í—Å—ë –æ–∫ ‚Äî –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º Steam ID
    await updateUserSteamId(telegramId, newSteamId);

    // 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–≥—Ä—ã –≤ steam_stats
    await saveSteamGames(newSteamId);

    // 6. –í—ã–¥–∞—ë–º –ø—Ä–µ–º–∏—É–º –Ω–∞ 4 –¥–Ω—è
    await db.query(`
      INSERT INTO premium (profile_id, expires_at)
      VALUES ((SELECT id FROM profiles WHERE telegram_id = $1), NOW() + INTERVAL '4 days')
      ON CONFLICT (profile_id) 
      DO UPDATE SET expires_at = GREATEST(premium.expires_at, NOW() + INTERVAL '4 days')
      `, [telegramId]);

      try {
        await ctx.reply('‚úÖ –í–∞—à Steam-–ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω!\n\nüéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ 4 –¥–Ω—è –ø—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å–∞ –∏ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–µ –¥–æ–≤–µ—Ä–∏–µ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–∏–º–º–µ–π—Ç–æ–≤!');
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è', err);
        await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (linkSteamScene, –≤–Ω—É—Ç—Ä–∏ –≥–ª–∞–≤–Ω–æ–≥–æ catch): ${err.message}`);
      }
    return ctx.scene.leave();

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ Steam:', error);
    await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ Steam (linkSteamScene): ${error.message}`);
    try {
      await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø—Ä–∏–≤—è–∑–∞—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å Steam. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è', err);
      await logToAdmin(`‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (linkSteamScene, –≤–Ω—É—Ç—Ä–∏ –≥–ª–∞–≤–Ω–æ–≥–æ catch): ${err.message}`);
    }
    return ctx.scene.leave();
  }
});

linkSteamScene.on('message', (ctx) => ctx.reply('‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Å—ã–ª–∫—É –∏–ª–∏ Steam ID.'));

export default linkSteamScene;
