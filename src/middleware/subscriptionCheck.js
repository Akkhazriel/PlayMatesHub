import { Markup } from 'telegraf';

const CHANNEL_ID = process.env.CHANNEL_ID; // —á–∏—Ç–∞–µ–º –∏–∑ .env

if (!CHANNEL_ID) {
  throw new Error('‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è CHANNEL_ID –Ω–µ –∑–∞–¥–∞–Ω–∞.');
}

export default async function subscriptionCheck(ctx, next) {
  if (!ctx.from) return next(); // –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è

  try {
    const member = await ctx.telegram.getChatMember(CHANNEL_ID, ctx.from.id);

    if (['creator', 'administrator', 'member'].includes(member.status)) {
      return next(); // –ø–æ–¥–ø–∏—Å–∞–Ω ‚Üí –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    } else {
      await ctx.reply(
        '‚ùóÔ∏è –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:',
        Markup.inlineKeyboard([
          Markup.button.url('üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', `https://t.me/${CHANNEL_ID.replace('@', '')}`)
        ])
      );
    }
  } catch (err) {
    console.error('[subscriptionCheck] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', err);

    try {
      await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } catch (sendErr) {
      if (sendErr.code === 403) {
        console.warn(`[subscriptionCheck] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.`);
      } else {
        console.error('[subscriptionCheck] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', sendErr);
      }
    }
  }
}