import { Markup } from 'telegraf';

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∫–∏ —Ä–µ–∫–ª–∞–º—ã.
 */
export function mainKeyboard() {
  return {
    reply_markup: {
      keyboard: [
        ['‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é'],
        ['üìÇ –í—Å–µ', 'üë£ Entry', 'üîç Search', '‚è± Interval'],
        ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
      ],
      resize_keyboard: true,
      one_time_keyboard: true
    }
  };
}

/**
 * –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã.
 */
export function buildInlineKeyboard(ad) {
  if (!ad || typeof ad.id !== 'number') {
    return Markup.inlineKeyboard([]);
  }

  return Markup.inlineKeyboard([
    [
      Markup.button.callback(`üóë –£–¥–∞–ª–∏—Ç—å ${ad.id}`, `ad_delete_${ad.id}`),
      Markup.button.callback(
        ad.active ? `üî¥ –í—ã–∫–ª—é—á–∏—Ç—å ${ad.id}` : `üü¢ –í–∫–ª—é—á–∏—Ç—å ${ad.id}`,
        `ad_toggle_${ad.id}`
      )
    ]
  ]);
}

/**
 * –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ä–µ–∫–ª–∞–º—ã.
 */
export function buildAdTypeButtons() {
  return {
    reply_markup: Markup.inlineKeyboard([
      [Markup.button.callback('üë£ –ü—Ä–∏ –≤—Ö–æ–¥–µ –≤ –±–æ—Ç–∞', 'ad_type_entry')],
      [Markup.button.callback('üîç –í –ø–æ–∏—Å–∫–µ —Ç–∏–º–º–µ–π—Ç–æ–≤', 'ad_type_search')],
      [Markup.button.callback('‚è± –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏', 'ad_type_interval')]
    ]).reply_markup
  };
}
