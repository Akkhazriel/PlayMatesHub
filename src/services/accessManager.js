// accessManager.js ‚Äî —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
let adminIds = new Set();

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ ENV –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
function loadFromEnv() {
  const ids = process.env.ADMIN_IDS
    ? process.env.ADMIN_IDS.split(',').map(id => id.trim())
    : [];
  adminIds = new Set(ids);
  console.log(`üîê –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${adminIds.size} –∞–¥–º–∏–Ω–æ–≤ –∏–∑ ENV`);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞: —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
export function isAdmin(telegramId) {
  return adminIds.has(telegramId.toString());
}

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É)
export function updateAdminIds(newIds) {
  adminIds = new Set(newIds.map(id => id.toString()));
  console.log(`üîÅ –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –æ–±–Ω–æ–≤–ª—ë–Ω: ${[...adminIds].join(', ')}`);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –≤—ã–≤–æ–¥–∞)
export function getAdminIds() {
  return [...adminIds];
}

// –ü–µ—Ä–≤–∏—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
loadFromEnv();
